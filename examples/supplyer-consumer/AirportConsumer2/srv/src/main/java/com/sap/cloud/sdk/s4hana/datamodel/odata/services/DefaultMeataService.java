/*
 * Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
 */

/*
 * Generated by OData VDM code generator of SAP Cloud SDK in version 2.28.0
 */

package com.sap.cloud.sdk.s4hana.datamodel.odata.services;

import javax.annotation.Nonnull;
import javax.inject.Named;
import com.sap.cloud.sdk.s4hana.datamodel.odata.namespaces.meata.Pilot;
import com.sap.cloud.sdk.s4hana.datamodel.odata.namespaces.meata.PilotByKeyFluentHelper;
import com.sap.cloud.sdk.s4hana.datamodel.odata.namespaces.meata.PilotCreateFluentHelper;
import com.sap.cloud.sdk.s4hana.datamodel.odata.namespaces.meata.PilotDeleteFluentHelper;
import com.sap.cloud.sdk.s4hana.datamodel.odata.namespaces.meata.PilotFluentHelper;
import com.sap.cloud.sdk.s4hana.datamodel.odata.namespaces.meata.PilotUpdateFluentHelper;
import com.sap.cloud.sdk.s4hana.datamodel.odata.namespaces.meata.Plane;
import com.sap.cloud.sdk.s4hana.datamodel.odata.namespaces.meata.PlaneByKeyFluentHelper;
import com.sap.cloud.sdk.s4hana.datamodel.odata.namespaces.meata.PlaneCreateFluentHelper;
import com.sap.cloud.sdk.s4hana.datamodel.odata.namespaces.meata.PlaneDeleteFluentHelper;
import com.sap.cloud.sdk.s4hana.datamodel.odata.namespaces.meata.PlaneFluentHelper;
import com.sap.cloud.sdk.s4hana.datamodel.odata.namespaces.meata.PlaneUpdateFluentHelper;
import com.sap.cloud.sdk.s4hana.datamodel.odata.namespaces.meata.Plane_texts;
import com.sap.cloud.sdk.s4hana.datamodel.odata.namespaces.meata.Plane_textsByKeyFluentHelper;
import com.sap.cloud.sdk.s4hana.datamodel.odata.namespaces.meata.Plane_textsCreateFluentHelper;
import com.sap.cloud.sdk.s4hana.datamodel.odata.namespaces.meata.Plane_textsDeleteFluentHelper;
import com.sap.cloud.sdk.s4hana.datamodel.odata.namespaces.meata.Plane_textsFluentHelper;
import com.sap.cloud.sdk.s4hana.datamodel.odata.namespaces.meata.Plane_textsUpdateFluentHelper;
import com.sap.cloud.sdk.s4hana.datamodel.odata.namespaces.meata.batch.DefaultMeataServiceBatch;


/**
 * <h3>Details:</h3><table summary='Details'><tr><td align='right'>OData Service:</td><td>meata</td></tr></table>
 * 
 */
@Named("com.sap.cloud.sdk.s4hana.datamodel.odata.services.DefaultMeataService")
public class DefaultMeataService
    implements MeataService
{

    @Nonnull
    private final String servicePath;

    /**
     * Creates a service using {@link MeataService#DEFAULT_SERVICE_PATH} to send the requests.
     * 
     */
    public DefaultMeataService() {
        servicePath = MeataService.DEFAULT_SERVICE_PATH;
    }

    /**
     * Creates a service using the provided service path to send the requests.
     * <p>
     * Used by the fluent {@link #withServicePath(String)} method.
     * 
     */
    private DefaultMeataService(
        @Nonnull
        final String servicePath) {
        this.servicePath = servicePath;
    }

    @Override
    @Nonnull
    public DefaultMeataService withServicePath(
        @Nonnull
        final String servicePath) {
        return new DefaultMeataService(servicePath);
    }

    /**
     * {@inheritDoc}
     * 
     */
    @Override
    @Nonnull
    public DefaultMeataServiceBatch batch() {
        return new DefaultMeataServiceBatch(this);
    }

    @Override
    @Nonnull
    public PilotFluentHelper getAllPilot() {
        return new PilotFluentHelper(servicePath);
    }

    @Override
    @Nonnull
    public PilotByKeyFluentHelper getPilotByKey(final Integer iD) {
        return new PilotByKeyFluentHelper(servicePath, iD);
    }

    @Override
    @Nonnull
    public PilotCreateFluentHelper createPilot(
        @Nonnull
        final Pilot pilot) {
        return new PilotCreateFluentHelper(servicePath, pilot);
    }

    @Override
    @Nonnull
    public PilotUpdateFluentHelper updatePilot(
        @Nonnull
        final Pilot pilot) {
        return new PilotUpdateFluentHelper(servicePath, pilot);
    }

    @Override
    @Nonnull
    public PilotDeleteFluentHelper deletePilot(
        @Nonnull
        final Pilot pilot) {
        return new PilotDeleteFluentHelper(servicePath, pilot);
    }

    @Override
    @Nonnull
    public PlaneFluentHelper getAllPlane() {
        return new PlaneFluentHelper(servicePath);
    }

    @Override
    @Nonnull
    public PlaneByKeyFluentHelper getPlaneByKey(final Integer iD) {
        return new PlaneByKeyFluentHelper(servicePath, iD);
    }

    @Override
    @Nonnull
    public PlaneCreateFluentHelper createPlane(
        @Nonnull
        final Plane plane) {
        return new PlaneCreateFluentHelper(servicePath, plane);
    }

    @Override
    @Nonnull
    public PlaneUpdateFluentHelper updatePlane(
        @Nonnull
        final Plane plane) {
        return new PlaneUpdateFluentHelper(servicePath, plane);
    }

    @Override
    @Nonnull
    public PlaneDeleteFluentHelper deletePlane(
        @Nonnull
        final Plane plane) {
        return new PlaneDeleteFluentHelper(servicePath, plane);
    }

    @Override
    @Nonnull
    public Plane_textsFluentHelper getAllPlane_texts() {
        return new Plane_textsFluentHelper(servicePath);
    }

    @Override
    @Nonnull
    public Plane_textsByKeyFluentHelper getPlane_textsByKey(final String locale, final Integer iD) {
        return new Plane_textsByKeyFluentHelper(servicePath, locale, iD);
    }

    @Override
    @Nonnull
    public Plane_textsCreateFluentHelper createPlane_texts(
        @Nonnull
        final Plane_texts plane_texts) {
        return new Plane_textsCreateFluentHelper(servicePath, plane_texts);
    }

    @Override
    @Nonnull
    public Plane_textsUpdateFluentHelper updatePlane_texts(
        @Nonnull
        final Plane_texts plane_texts) {
        return new Plane_textsUpdateFluentHelper(servicePath, plane_texts);
    }

    @Override
    @Nonnull
    public Plane_textsDeleteFluentHelper deletePlane_texts(
        @Nonnull
        final Plane_texts plane_texts) {
        return new Plane_textsDeleteFluentHelper(servicePath, plane_texts);
    }

}
